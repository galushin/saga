[example/ga/exe_objective.cpp:57]: (style) Consider using std::transform algorithm instead of a raw loop.
[example/local_search/sample_library.cpp:27]: (performance, inconclusive) Technically the member function '::sample_library_registrar::do_init' can be static (but you may consider moving to unnamed namespace).
[tests/saga_test.hpp:63]: (performance, inconclusive) Function parameter 'generation' should be passed by const reference.
[tests/saga_test.hpp:94]: (performance, inconclusive) Function parameter 'generation' should be passed by const reference.
[tests/saga_test.hpp:196]: (performance, inconclusive) Function parameter 'generation' should be passed by const reference.
[tests/saga_test.hpp:283]: (performance, inconclusive) Function parameter 'generation' should be passed by const reference.
[tests/saga_test.hpp:306]: (performance, inconclusive) Function parameter 'generation' should be passed by const reference.
[tests/saga_test.hpp:319]: (performance, inconclusive) Function parameter 'generation' should be passed by const reference.
[tests/saga_test.hpp:323]: (warning) Redundant code: Found a statement that begins with numeric constant.
[tests/saga_test.hpp:352]: (warning) Redundant code: Found a statement that begins with numeric constant.
[tests/expected.cpp:541]: (style) Struct 'throwing_implicit_ctor_from_int' has a constructor with 1 argument that is not explicit.
[tests/expected.cpp:676]: (style) Struct 'ctor_from_in_place_t' has a constructor with 1 argument that is not explicit.
[tests/string_view.cpp:906]: (warning) Redundant code: Found a statement that begins with numeric constant.
[tests/utility/equality_comparable_box.cpp:147]: (warning) Redundant code: Found a statement that begins with numeric constant.
[tests/view/indices.cpp:108]: (performance) Prefer prefix ++/-- operators for non-primitive types.
[tests/view/indices.cpp:118]: (performance) Prefer prefix ++/-- operators for non-primitive types.
(information) Cppcheck cannot find all the include files (use --check-config for details)
