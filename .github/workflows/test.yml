name: test

on:
  push:
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        config:
          # GCC
          - {
              name: "Linux GCC default",
              CC: "gcc", 
              CXX: "g++",
            }
          - {
              name: "Linux GCC 7",
              CC: "gcc-7", 
              CXX: "g++-7",
            }
          - {
              name: "Linux GCC 8",
              CC: "gcc-8", 
              CXX: "g++-8",
            }
          - {
              name: "Linux GCC 9",
              CC: "gcc-9", 
              CXX: "g++-9",
            }
          - {
              name: "Linux GCC 10",
              CC: "gcc-10", 
              CXX: "g++-10",
            }
          # Clang
          - {
              name: "Linux Clang default",
              CC: "clang", 
              CXX: "clang++",
            }
          - {
              name: "Linux Clang 5",
              CC: "clang-5.0", 
              CXX: "clang++-5.0",
            }
          - {
              name: "Linux Clang 6",
              CC: "clang-6.0", 
              CXX: "clang++-6.0",
            }
          - {
              name: "Linux Clang 7",
              CC: "clang-7", 
              CXX: "clang++-7",
            }
          - {
              name: "Linux Clang 8",
              CC: "clang-8", 
              CXX: "clang++-8",
            }
          - {
              name: "Linux Clang 9",
              CC: "clang-9", 
              CXX: "clang++-9",
            }
          - {
              name: "Linux Clang 10",
              CC: "clang-10", 
              CXX: "clang++-10",
            }
          - {
              name: "Linux Clang 11",
              CC: "clang-11", 
              CXX: "clang++-11",
            }
          - {
              name: "Linux Clang 12",
              CC: "clang-12", 
              CXX: "clang++-12",
            }

    steps:
      - uses: actions/checkout@v2
      
      - name: Install GCC 7
        id: install_gcc_7
        if: ( matrix.config.CXX == 'g++-7' )
        shell: bash
        working-directory: ${{ env.HOME }}
        run: |
          sudo apt-get install -y gcc-7 g++-7

      - name: Install GCC 8
        id: install_gcc_8
        if: ( matrix.config.CXX == 'g++-8' )
        shell: bash
        working-directory: ${{ env.HOME }}
        run: |
          sudo apt-get install -y gcc-8 g++-8

      - name: Install Clang 5
        id: install_clang_5
        if: ( matrix.config.cxx == 'clang++-5.0' )
        shell: bash
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "5.0"
          directory: ${{ runner.temp }}/llvm
        
      - name: Install Clang 6
        id: install_clang_6
        if: ( matrix.config.cxx == 'clang++-6.0' )
        shell: bash
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "6.0"
          directory: ${{ runner.temp }}/llvm
          
      - name: Install Clang 7
        id: install_clang_7
        if: ( matrix.config.cxx == 'clang++-7.0' )
        shell: bash
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "7.0"
          directory: ${{ runner.temp }}/llvm
          
      - name: Install Clang 8
        id: install_clang_8
        if: ( matrix.config.cxx == 'clang++-8' )
        shell: bash
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "8.0"
          directory: ${{ runner.temp }}/llvm
          
      - name: Install Clang 9
        id: install_clang_9
        if: ( matrix.config.cxx == 'clang++-9' )
        shell: bash
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "9.0"
          directory: ${{ runner.temp }}/llvm
          
      - name: build-and-test
        env:
          CXX: ${{ matrix.config.cxx }}
          CC: ${{ matrix.config.cc }}
          
        run: >
          $CXX -v
          && cd ./tests
          && make -f makefile.gcc debug 
          && ./bin/Debug/test
          && make -f makefile.gcc release 
          && ./bin/Release/test
          && cd ../example/local_search
          && make -f makefile.gcc debug 
          && ./bin/Debug/local_search
          && make -f makefile.gcc release 
          && ./bin/Release/local_search
